[{"C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\index.tsx":"1","C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\reportWebVitals.ts":"2","C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\App.tsx":"3","C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\components\\Home\\index.tsx":"4","C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\components\\Button\\index.tsx":"5","C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\components\\ResizableTextArea\\index.tsx":"6"},{"size":521,"mtime":1608617910044,"results":"7","hashOfConfig":"8"},{"size":440,"mtime":1608157611217,"results":"9","hashOfConfig":"8"},{"size":833,"mtime":1609914669852,"results":"10","hashOfConfig":"8"},{"size":2757,"mtime":1609915596094,"results":"11","hashOfConfig":"8"},{"size":700,"mtime":1608157611116,"results":"12","hashOfConfig":"8"},{"size":1700,"mtime":1610566457127,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1hzg8q4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\index.tsx",[],["28","29"],"C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\reportWebVitals.ts",[],"C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\App.tsx",[],"C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\components\\Home\\index.tsx",["30"],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport ResizableTextarea from \"../ResizableTextArea\";\r\nimport Button from \"../Button\";\r\n\r\nimport \"./_index.scss\";\r\n\r\ntype HomeProps = {\r\n    connection?: WebSocket;\r\n    message?: any;\r\n}\r\n\r\nenum STEP {\r\n    PREPROCESSING = \"PREPROCESSING\",\r\n    ANALYZING = \"ANALYZING\",\r\n    POSTPROCESSING = \"POSTPROCESSING\",\r\n}\r\n\r\nconst Home: React.FunctionComponent<HomeProps> = (props) => {\r\n    const [text, setText] = useState<string>();\r\n    const [finishedSteps, setFinishedSteps] = useState<STEP[]>([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [spans, setSpans] = useState<number[]>();\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.message) {\r\n\r\n            if (props.message.includes(STEP.PREPROCESSING)) {\r\n                setFinishedSteps([...finishedSteps, STEP.PREPROCESSING])\r\n            } else if (props.message.includes(STEP.ANALYZING)) {\r\n                setFinishedSteps([...finishedSteps, STEP.ANALYZING])\r\n            } else if (props.message.includes(STEP.POSTPROCESSING)) {\r\n                setFinishedSteps([...finishedSteps, STEP.POSTPROCESSING])\r\n                setIsLoading(false);\r\n            } else {\r\n                const plainSpans = props.message;\r\n                console.log(plainSpans);\r\n                setSpans(plainSpans.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\").map((el: string) => (+el)));\r\n            }\r\n        }\r\n\r\n    }, [props.message])\r\n\r\n    const handleOnChange = (value: string) => {\r\n        setText(value);\r\n    }\r\n\r\n    const handleOnCheck = () => {\r\n        props.connection && props.connection.send(text ?? '');\r\n        // setFinishedSteps([STEP.PREPROCESSING, STEP.ANALYZING, STEP.POSTPROCESSING]);\r\n        setIsLoading(true);\r\n        // setTimeout(() => setIsLoading(false), 4000);\r\n        // setTimeout(() => setFinishedSteps([STEP.PREPROCESSING]), 1000);\r\n        // setTimeout(() => setFinishedSteps([STEP.PREPROCESSING, STEP.ANALYZING]), 2000);\r\n        // setTimeout(() => setFinishedSteps([STEP.PREPROCESSING, STEP.ANALYZING, STEP.POSTPROCESSING]), 3000);\r\n        // setTimeout(() => setSpans([1]), 3000);\r\n    }\r\n\r\n    return <div className=\"main--container\">\r\n        <ResizableTextarea className=\"main--container__input\" onChange={handleOnChange} spans={spans}/>\r\n        <div className=\"main--container__results\">\r\n            <Button className=\"analyze\" isLoading={isLoading} onClick={handleOnCheck}> Analyze text </Button>\r\n            <ul>\r\n                {finishedSteps.map((step) => (\r\n                    <li key={step}><p className=\"has-text-weight-bold is-capitalized is-italic\">{step as STEP}...</p>\r\n                    </li>))}\r\n            </ul>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Home;","C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\components\\Button\\index.tsx",[],"C:\\Users\\Cristian Ninicu\\Documents\\GitHub\\toxic-spans-detection-ui\\src\\components\\ResizableTextArea\\index.tsx",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":43,"column":8,"nodeType":"38","endLine":43,"endColumn":23,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":38,"column":8,"nodeType":"38","endLine":38,"endColumn":21,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'finishedSteps'. Either include it or remove the dependency array. You can also do a functional update 'setFinishedSteps(f => ...)' if you only need 'finishedSteps' in the 'setFinishedSteps' call.","ArrayExpression",["44"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},"Update the dependencies array to be: [finishedSteps, props.message]",{"range":"50","text":"51"},"Update the dependencies array to be: [props.spans, value]",{"range":"52","text":"53"},[1437,1452],"[finishedSteps, props.message]",[1078,1091],"[props.spans, value]"]